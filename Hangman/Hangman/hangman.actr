;;; Model of Hangman
;;;

(add-dm
;;Letters
(LA isa letter value a used false)
(LB isa letter value n used false)
(LC isa letter value c used false)
(LD isa letter value d used false)
(LE isa letter value e used false)
(LF isa letter value f used false)
(LG isa letter value g used false)
(LH isa letter value h used false)
(LI isa letter value i used false)
(LJ isa letter value j used false)
(LK isa letter value k used false)
(LL isa letter value l used false)
(LM isa letter value m used false)
(LN isa letter value n used false)
(LO isa letter value o used false)
(LP isa letter value p used false)
(LQ isa letter value q used false)
(LR isa letter value r used false)
(LS isa letter value s used false)
(LT isa letter value t used false)
(LU isa letter value u used false)
(LV isa letter value v used false)
(LW isa letter value w used false)
(LX isa letter value x used false)
(LY isa letter value y used false)
(LZ isa letter value z used false)

(wabandon isa word value abandon letter1 LA letter2 LB letter3 LA letter4 LN letter5 LD letter6 LO letter7 LN length long)
(wabandoned isa word value abandoned letter1 LA letter2 LB letter3 LA letter4 LN letter5 LD letter6 LO letter7 LN letter8 LE letter9 LD length long)
(wability isa word value ability letter1 LA letter2 LB letter3 LI letter4 LL letter5 LI letter6 T letter7 Y length long)
(wnature isa word value nature letter1 LN letter2 LA letter3 T letter4 U letter5 R letter6 LE length short)
(wnaive isa word value naive letter1 LN letter LA letter3 LI letter4 LV letter5 LE length short)
(wneighbourhood isa word value neighbourhood letter1 LN letter2 LE letter3 LI letter4 LG letter5 LH letter6 LB letter7 LO letter8 U letter9 R letter10 LH  letter11 LO letter12 LO letter13 LD length extraLong)

(goal isa goal state guess_letter)
(goal2 isa goal state reinforce-right-guess)
(goal3 isa goal state GameOverCheck)
(goal4 isa goal state reset)
)

(set-all-baselevels -100 10)
;; time offset and number of references

;; At the start of the model, retrieve any decision

(p retrieve-letter
=goal>
isa goal
state guess_letter
==>
=goal>
state anounce_decision
+retrieval>
isa letter
used false
)

(p make-decision
=goal>
isa goal
state anounce_decision
=retrieval>
isa letter
value =decision
==>
=goal>
state modify-chunks
letteris =decision
=retrieval>
used true
+action>
isa move
choice =decision
)

(p modify-chunks
=goal>
state modify-chunks
=retrieval>
==>
-retrieval>
=goal>
isa goal
state recording-result)


(p get-feedback
=goal>
isa goal
state recording-result
letteris =decision
=action>
isa move
feedback =result
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize
==>
=goal>
isa goal
state check-if-right
ifLastLetterGood =result
letteris =decision
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize

)


(p reinforce-right-guess
=goal>
isa goal
state check-if-right
ifLastLetterGood right
letteris =decision
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize
==>
=goal>
isa goal
state clear-imaginal
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize
+imaginal>
isa letter
value =decision
used true

)

(p clear-imaginal
=goal>
isa goal
state clear-imaginal
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize
==>
-imaginal>
=goal>
isa goal
state if-known
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize
-action>

)


(p ignore-wrong-guess
=goal>
isa goal
state check-if-right
ifLastLetterGood wrong
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize
==>
=goal>
isa goal
state if-known
firstLetter =firstLetter
firstLetterKnown =firstLetterKnown
wordSize =wordSize

)



(p retrieve-from-first-letter
=goal>
isa goal
state if-known
firstLetterKnown true
firstLetter =firstLetter
wordSize =wordSize

==>
+retrieval>
isa word
letter1 =firstLetter
=goal>
isa goal
state guess-word
firstLetter =firstLetter
wordSize =wordSize
)

(p retrieve-from-length
=goal>
isa goal
state if-known
firstLetterKnown true
firstLetter =firstLetter
wordSize =wordSize
==>
+retrieval>
isa word
length =wordSize
=goal>
isa goal
state guess-word
firstLetter =firstLetter
wordSize =wordSize
)


(p yes
=goal>
isa goal
state guess-word
firstLetter =firstLetter
wordSize =wordSize

=retrieval>
isa word
letter1 =firstLetter
length =wordSize
value =guessWord

==>
=goal>
isa goal
state clear-action
+action>
isa guess
guessWord =guessWord
-action>

)


(p if-first-letter-unknown
=goal>
isa goal
state if-known
firstLetterKnown false
==>
=goal>
isa goal
state guess_letter
)



(goal-focus goal)

